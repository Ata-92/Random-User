{"version":3,"sources":["assets/email.svg","assets/phone.svg","assets/location.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","user","setUser","getData","axios","get","then","res","data","results","map","image","picture","large","name","title","first","last","email","phone","cell","location","city","country","age","dob","registration","registered","date","slice","useEffect","className","auser","src","alt","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAAe,G,MAAA,IAA0B,mCCA1B,MAA0B,kCCA1B,MAA0B,qC,wBCoD1BA,MA7Cf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,KAGPC,EAAU,WACdC,IACGC,IAAI,8BACJC,MAAK,SAACC,GAAD,OACJA,EAAIC,KAAKC,QAAQC,KAAI,SAACT,GAAD,MAAW,CAC9BU,MAAM,GAAD,OAAKV,EAAKW,QAAQC,OACvBC,KAAK,GAAD,OAAKb,EAAKa,KAAKC,MAAf,YAAwBd,EAAKa,KAAKE,MAAlC,YAA2Cf,EAAKa,KAAKG,MACzDC,MAAM,GAAD,OAAKjB,EAAKiB,OACfC,MAAM,GAAD,OAAKlB,EAAKmB,MACfC,SAAS,GAAD,OAAKpB,EAAKoB,SAASC,KAAnB,cAA6BrB,EAAKoB,SAASE,SACnDC,IAAI,QAAD,OAAUvB,EAAKwB,IAAID,KACtBE,aAAa,kBAAD,OAAoBzB,EAAK0B,WAAWC,KAAKC,MAAM,EAAG,YAGjEvB,MAAK,SAACE,GAAD,OAAUN,EAAQM,OAK5B,OAFAsB,oBAAU3B,EAAS,IAGjB,sBAAK4B,UAAU,MAAf,UACG9B,EAAKS,KAAI,SAACsB,GAAD,OACR,sBAAgBD,UAAU,OAA1B,UACE,qBAAKE,IAAKD,EAAMrB,MAAOuB,IAAI,OAAOH,UAAU,eAC5C,oBAAIA,UAAU,YAAd,SAA2BC,EAAMlB,OACjC,qBAAKmB,IAAKf,EAAOgB,IAAI,aAAaH,UAAU,gBAC5C,mBAAGA,UAAU,aAAb,SAA2BC,EAAMd,QACjC,qBAAKe,IAAKd,EAAOe,IAAI,aAAaH,UAAU,gBAC5C,mBAAGA,UAAU,YAAb,SAA0BC,EAAMb,QAChC,qBAAKc,IAAKZ,EAAUa,IAAI,gBAAgBH,UAAU,mBAClD,mBAAGA,UAAU,gBAAb,SAA8BC,EAAMX,WACpC,mBAAGU,UAAU,WAAb,SAAyBC,EAAMR,MAC/B,mBAAGO,UAAU,oBAAb,SAAkCC,EAAMN,iBAVjC,WAaX,qBAAKK,UAAU,MAAf,SACE,wBAAQI,QAAShC,EAAjB,+BClCOiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4f538be6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/email.e1f03bb9.svg\";","export default __webpack_public_path__ + \"static/media/phone.d017e1ae.svg\";","export default __webpack_public_path__ + \"static/media/location.0b7d98ab.svg\";","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport email from \"../src/assets/email.svg\";\nimport phone from \"../src/assets/phone.svg\";\nimport location from \"../src/assets/location.svg\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [user, setUser] = useState([]);\n\n  const getData = () => {\n    axios\n      .get(\"https://randomuser.me/api/\")\n      .then((res) =>\n        res.data.results.map((user) => ({\n          image: `${user.picture.large}`,\n          name: `${user.name.title} ${user.name.first} ${user.name.last}`,\n          email: `${user.email}`,\n          phone: `${user.cell}`,\n          location: `${user.location.city} - ${user.location.country}`,\n          age: `Age: ${user.dob.age}`,\n          registration: `Register Date: ${user.registered.date.slice(0, 10)}`,\n        }))\n      )\n      .then((data) => setUser(data));\n  };\n\n  useEffect(getData, []);\n\n  return (\n    <div className=\"App\">\n      {user.map((auser) => (\n        <div key=\"user\" className=\"card\">\n          <img src={auser.image} alt=\"user\" className=\"user-image\" />\n          <h1 className=\"user-name\">{auser.name}</h1>\n          <img src={email} alt=\"Email Icon\" className=\"email-image\" />\n          <p className=\"user-email\">{auser.email}</p>\n          <img src={phone} alt=\"Phone Icon\" className=\"phone-image\" />\n          <p className=\"user-cell\">{auser.phone}</p>\n          <img src={location} alt=\"Location Icon\" className=\"location-image\" />\n          <p className=\"user-location\">{auser.location}</p>\n          <p className=\"user-age\">{auser.age}</p>\n          <p className=\"user-registration\">{auser.registration}</p>\n        </div>\n      ))}\n      <div className=\"btn\">\n        <button onClick={getData}>Random User</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}